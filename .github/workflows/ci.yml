name: CI/CD Pipeline

on:
  push:
    branches: [master, main]

permissions:
  id-token: write
  contents: read
    

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Export JAVA_HOME
        run: echo "JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV          
        
      - name: Run Checkstyle
        run: mvn checkstyle:checkstyle
        
      - name: Run SpotBugs
        run: mvn com.github.spotbugs:spotbugs-maven-plugin:spotbugs
     
      - name: Run Secret Scan
        uses: pre-commit/action@v3.0.0

      - name: Bump Version
        id: bump
        uses: nnichols/maven-version-bump-action@v3
        with:
           username: ${{ secrets.DOCKERHUB_USERNAME }}
           password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Print Version
        run: "echo 'New Version: ${{steps.bump.outputs.version}}'"

      - name: Set VERSION env 
        run: echo "VERSION=${{ steps.bump.outputs.version }}" >> $GITHUB_ENV 
        
      - name: Set lowercase image name
        run: echo "IMAGE_NAME=ghcr.io/${GITHUB_REPOSITORY,,}:${{ env.VERSION }}" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME .

      - name: Log in to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image to GHCR
        run: docker push $IMAGE_NAME


      - name: Run Trivy Dependency Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          ignore-unfixed: true
          severity: "CRITICAL"
          exit-code: "1"

      - name: Scan Dockerfile with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "config"
          scan-ref: "./Dockerfile"
          exit-code: "1"
      
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.5.0

      - name: Sign the image using OIDC (no keys needed)
        env:
          COSIGN_EXPERIMENTAL: 'true'
        run: |
          echo "Signing image: $IMAGE_NAME"
          cosign sign --yes --oidc-issuer https://token.actions.githubusercontent.com $IMAGE_NAME          
